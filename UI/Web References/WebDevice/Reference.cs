//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace UI.WebDevice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NtitServerSoap", Namespace="http://tempuri.org/")]
    public partial class NtitServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VerificationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback OneDWanOperationCompleted;
        
        private System.Threading.SendOrPostCallback BaseOneDWanOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuickResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBillInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback Pay100OperationCompleted;
        
        private System.Threading.SendOrPostCallback Pay001OperationCompleted;
        
        private System.Threading.SendOrPostCallback LunXunOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectUserInfoByIDnoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DDCXOperationCompleted;
        
        private System.Threading.SendOrPostCallback FaceDestOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SoftwarePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback VcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEqTerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InserEqTerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankNumInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NtitServer() {
            this.Url = global::UI.Properties.Settings.Default.UI_WebFace_WSFaces;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VerificationCodeCompletedEventHandler VerificationCodeCompleted;
        
        /// <remarks/>
        public event OneDWanCompletedEventHandler OneDWanCompleted;
        
        /// <remarks/>
        public event BaseOneDWanCompletedEventHandler BaseOneDWanCompleted;
        
        /// <remarks/>
        public event DetectionCompletedEventHandler DetectionCompleted;
        
        /// <remarks/>
        public event QuickResponseCompletedEventHandler QuickResponseCompleted;
        
        /// <remarks/>
        public event AddBillInfoCompletedEventHandler AddBillInfoCompleted;
        
        /// <remarks/>
        public event UpdateBillCompletedEventHandler UpdateBillCompleted;
        
        /// <remarks/>
        public event Pay100CompletedEventHandler Pay100Completed;
        
        /// <remarks/>
        public event Pay001CompletedEventHandler Pay001Completed;
        
        /// <remarks/>
        public event LunXunCompletedEventHandler LunXunCompleted;
        
        /// <remarks/>
        public event SelectUserInfoByIDnoCompletedEventHandler SelectUserInfoByIDnoCompleted;
        
        /// <remarks/>
        public event DDCXCompletedEventHandler DDCXCompleted;
        
        /// <remarks/>
        public event FaceDestCompletedEventHandler FaceDestCompleted;
        
        /// <remarks/>
        public event RefundCompletedEventHandler RefundCompleted;
        
        /// <remarks/>
        public event GetVerCompletedEventHandler GetVerCompleted;
        
        /// <remarks/>
        public event GetAppDataCompletedEventHandler GetAppDataCompleted;
        
        /// <remarks/>
        public event SoftwarePackageCompletedEventHandler SoftwarePackageCompleted;
        
        /// <remarks/>
        public event VcCompletedEventHandler VcCompleted;
        
        /// <remarks/>
        public event GetEqTerInfoCompletedEventHandler GetEqTerInfoCompleted;
        
        /// <remarks/>
        public event InserEqTerCompletedEventHandler InserEqTerCompleted;
        
        /// <remarks/>
        public event GetBankNumInfoCompletedEventHandler GetBankNumInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificationCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerificationCode(string Phone) {
            object[] results = this.Invoke("VerificationCode", new object[] {
                        Phone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerificationCodeAsync(string Phone) {
            this.VerificationCodeAsync(Phone, null);
        }
        
        /// <remarks/>
        public void VerificationCodeAsync(string Phone, object userState) {
            if ((this.VerificationCodeOperationCompleted == null)) {
                this.VerificationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificationCodeOperationCompleted);
            }
            this.InvokeAsync("VerificationCode", new object[] {
                        Phone}, this.VerificationCodeOperationCompleted, userState);
        }
        
        private void OnVerificationCodeOperationCompleted(object arg) {
            if ((this.VerificationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificationCodeCompleted(this, new VerificationCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OneDWan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OneDWan([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byt) {
            object[] results = this.Invoke("OneDWan", new object[] {
                        byt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OneDWanAsync(byte[] byt) {
            this.OneDWanAsync(byt, null);
        }
        
        /// <remarks/>
        public void OneDWanAsync(byte[] byt, object userState) {
            if ((this.OneDWanOperationCompleted == null)) {
                this.OneDWanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOneDWanOperationCompleted);
            }
            this.InvokeAsync("OneDWan", new object[] {
                        byt}, this.OneDWanOperationCompleted, userState);
        }
        
        private void OnOneDWanOperationCompleted(object arg) {
            if ((this.OneDWanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OneDWanCompleted(this, new OneDWanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BaseOneDWan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BaseOneDWan(string byt, string Hc) {
            object[] results = this.Invoke("BaseOneDWan", new object[] {
                        byt,
                        Hc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BaseOneDWanAsync(string byt, string Hc) {
            this.BaseOneDWanAsync(byt, Hc, null);
        }
        
        /// <remarks/>
        public void BaseOneDWanAsync(string byt, string Hc, object userState) {
            if ((this.BaseOneDWanOperationCompleted == null)) {
                this.BaseOneDWanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBaseOneDWanOperationCompleted);
            }
            this.InvokeAsync("BaseOneDWan", new object[] {
                        byt,
                        Hc}, this.BaseOneDWanOperationCompleted, userState);
        }
        
        private void OnBaseOneDWanOperationCompleted(object arg) {
            if ((this.BaseOneDWanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BaseOneDWanCompleted(this, new BaseOneDWanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Detection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Detection(string byt, string Hc) {
            object[] results = this.Invoke("Detection", new object[] {
                        byt,
                        Hc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DetectionAsync(string byt, string Hc) {
            this.DetectionAsync(byt, Hc, null);
        }
        
        /// <remarks/>
        public void DetectionAsync(string byt, string Hc, object userState) {
            if ((this.DetectionOperationCompleted == null)) {
                this.DetectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetectionOperationCompleted);
            }
            this.InvokeAsync("Detection", new object[] {
                        byt,
                        Hc}, this.DetectionOperationCompleted, userState);
        }
        
        private void OnDetectionOperationCompleted(object arg) {
            if ((this.DetectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetectionCompleted(this, new DetectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QuickResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QuickResponse(string ORDERID, double PAYMENT, string REMARK1, string REMARK2, string RETURNTYPE, string TIMEOUT, string PUB, string MERCHANTID, string POSID, string BRANCHID, string CURCODE, string TXCODE) {
            object[] results = this.Invoke("QuickResponse", new object[] {
                        ORDERID,
                        PAYMENT,
                        REMARK1,
                        REMARK2,
                        RETURNTYPE,
                        TIMEOUT,
                        PUB,
                        MERCHANTID,
                        POSID,
                        BRANCHID,
                        CURCODE,
                        TXCODE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QuickResponseAsync(string ORDERID, double PAYMENT, string REMARK1, string REMARK2, string RETURNTYPE, string TIMEOUT, string PUB, string MERCHANTID, string POSID, string BRANCHID, string CURCODE, string TXCODE) {
            this.QuickResponseAsync(ORDERID, PAYMENT, REMARK1, REMARK2, RETURNTYPE, TIMEOUT, PUB, MERCHANTID, POSID, BRANCHID, CURCODE, TXCODE, null);
        }
        
        /// <remarks/>
        public void QuickResponseAsync(string ORDERID, double PAYMENT, string REMARK1, string REMARK2, string RETURNTYPE, string TIMEOUT, string PUB, string MERCHANTID, string POSID, string BRANCHID, string CURCODE, string TXCODE, object userState) {
            if ((this.QuickResponseOperationCompleted == null)) {
                this.QuickResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuickResponseOperationCompleted);
            }
            this.InvokeAsync("QuickResponse", new object[] {
                        ORDERID,
                        PAYMENT,
                        REMARK1,
                        REMARK2,
                        RETURNTYPE,
                        TIMEOUT,
                        PUB,
                        MERCHANTID,
                        POSID,
                        BRANCHID,
                        CURCODE,
                        TXCODE}, this.QuickResponseOperationCompleted, userState);
        }
        
        private void OnQuickResponseOperationCompleted(object arg) {
            if ((this.QuickResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuickResponseCompleted(this, new QuickResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddBillInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddBillInfo(string InstitutionalID, string RealName, string IDno, string VisitCard, string SocialSecurity, string Detailed, string TotalPrice, string InvNum, string Remark1, string Remark2) {
            this.Invoke("AddBillInfo", new object[] {
                        InstitutionalID,
                        RealName,
                        IDno,
                        VisitCard,
                        SocialSecurity,
                        Detailed,
                        TotalPrice,
                        InvNum,
                        Remark1,
                        Remark2});
        }
        
        /// <remarks/>
        public void AddBillInfoAsync(string InstitutionalID, string RealName, string IDno, string VisitCard, string SocialSecurity, string Detailed, string TotalPrice, string InvNum, string Remark1, string Remark2) {
            this.AddBillInfoAsync(InstitutionalID, RealName, IDno, VisitCard, SocialSecurity, Detailed, TotalPrice, InvNum, Remark1, Remark2, null);
        }
        
        /// <remarks/>
        public void AddBillInfoAsync(string InstitutionalID, string RealName, string IDno, string VisitCard, string SocialSecurity, string Detailed, string TotalPrice, string InvNum, string Remark1, string Remark2, object userState) {
            if ((this.AddBillInfoOperationCompleted == null)) {
                this.AddBillInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBillInfoOperationCompleted);
            }
            this.InvokeAsync("AddBillInfo", new object[] {
                        InstitutionalID,
                        RealName,
                        IDno,
                        VisitCard,
                        SocialSecurity,
                        Detailed,
                        TotalPrice,
                        InvNum,
                        Remark1,
                        Remark2}, this.AddBillInfoOperationCompleted, userState);
        }
        
        private void OnAddBillInfoOperationCompleted(object arg) {
            if ((this.AddBillInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBillInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateBill(string InvNum, string OrderID, string State) {
            object[] results = this.Invoke("UpdateBill", new object[] {
                        InvNum,
                        OrderID,
                        State});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBillAsync(string InvNum, string OrderID, string State) {
            this.UpdateBillAsync(InvNum, OrderID, State, null);
        }
        
        /// <remarks/>
        public void UpdateBillAsync(string InvNum, string OrderID, string State, object userState) {
            if ((this.UpdateBillOperationCompleted == null)) {
                this.UpdateBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBillOperationCompleted);
            }
            this.InvokeAsync("UpdateBill", new object[] {
                        InvNum,
                        OrderID,
                        State}, this.UpdateBillOperationCompleted, userState);
        }
        
        private void OnUpdateBillOperationCompleted(object arg) {
            if ((this.UpdateBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBillCompleted(this, new UpdateBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Pay100", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Pay100(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, string QRCODE, double AMOUNT, string TXCODE, string PROINFO, string REMARK1, string REMARK2) {
            object[] results = this.Invoke("Pay100", new object[] {
                        MERFLAG,
                        MERCHANTID,
                        POSID,
                        TERMNO1,
                        TERMNO2,
                        BRANCHID,
                        ORDERID,
                        QRCODE,
                        AMOUNT,
                        TXCODE,
                        PROINFO,
                        REMARK1,
                        REMARK2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Pay100Async(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, string QRCODE, double AMOUNT, string TXCODE, string PROINFO, string REMARK1, string REMARK2) {
            this.Pay100Async(MERFLAG, MERCHANTID, POSID, TERMNO1, TERMNO2, BRANCHID, ORDERID, QRCODE, AMOUNT, TXCODE, PROINFO, REMARK1, REMARK2, null);
        }
        
        /// <remarks/>
        public void Pay100Async(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, string QRCODE, double AMOUNT, string TXCODE, string PROINFO, string REMARK1, string REMARK2, object userState) {
            if ((this.Pay100OperationCompleted == null)) {
                this.Pay100OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPay100OperationCompleted);
            }
            this.InvokeAsync("Pay100", new object[] {
                        MERFLAG,
                        MERCHANTID,
                        POSID,
                        TERMNO1,
                        TERMNO2,
                        BRANCHID,
                        ORDERID,
                        QRCODE,
                        AMOUNT,
                        TXCODE,
                        PROINFO,
                        REMARK1,
                        REMARK2}, this.Pay100OperationCompleted, userState);
        }
        
        private void OnPay100OperationCompleted(object arg) {
            if ((this.Pay100Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Pay100Completed(this, new Pay100CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Pay001", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Pay001(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, string QRCODE, double AMOUNT, string TXCODE, string PROINFO, string REMARK1, string REMARK2, string PUB) {
            object[] results = this.Invoke("Pay001", new object[] {
                        MERFLAG,
                        MERCHANTID,
                        POSID,
                        TERMNO1,
                        TERMNO2,
                        BRANCHID,
                        ORDERID,
                        QRCODE,
                        AMOUNT,
                        TXCODE,
                        PROINFO,
                        REMARK1,
                        REMARK2,
                        PUB});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Pay001Async(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, string QRCODE, double AMOUNT, string TXCODE, string PROINFO, string REMARK1, string REMARK2, string PUB) {
            this.Pay001Async(MERFLAG, MERCHANTID, POSID, TERMNO1, TERMNO2, BRANCHID, ORDERID, QRCODE, AMOUNT, TXCODE, PROINFO, REMARK1, REMARK2, PUB, null);
        }
        
        /// <remarks/>
        public void Pay001Async(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, string QRCODE, double AMOUNT, string TXCODE, string PROINFO, string REMARK1, string REMARK2, string PUB, object userState) {
            if ((this.Pay001OperationCompleted == null)) {
                this.Pay001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPay001OperationCompleted);
            }
            this.InvokeAsync("Pay001", new object[] {
                        MERFLAG,
                        MERCHANTID,
                        POSID,
                        TERMNO1,
                        TERMNO2,
                        BRANCHID,
                        ORDERID,
                        QRCODE,
                        AMOUNT,
                        TXCODE,
                        PROINFO,
                        REMARK1,
                        REMARK2,
                        PUB}, this.Pay001OperationCompleted, userState);
        }
        
        private void OnPay001OperationCompleted(object arg) {
            if ((this.Pay001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Pay001Completed(this, new Pay001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LunXun", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LunXun(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, int QRYTIME, string QRCODETYPE, string TXCODE) {
            object[] results = this.Invoke("LunXun", new object[] {
                        MERFLAG,
                        MERCHANTID,
                        POSID,
                        TERMNO1,
                        TERMNO2,
                        BRANCHID,
                        ORDERID,
                        QRYTIME,
                        QRCODETYPE,
                        TXCODE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LunXunAsync(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, int QRYTIME, string QRCODETYPE, string TXCODE) {
            this.LunXunAsync(MERFLAG, MERCHANTID, POSID, TERMNO1, TERMNO2, BRANCHID, ORDERID, QRYTIME, QRCODETYPE, TXCODE, null);
        }
        
        /// <remarks/>
        public void LunXunAsync(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, int QRYTIME, string QRCODETYPE, string TXCODE, object userState) {
            if ((this.LunXunOperationCompleted == null)) {
                this.LunXunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLunXunOperationCompleted);
            }
            this.InvokeAsync("LunXun", new object[] {
                        MERFLAG,
                        MERCHANTID,
                        POSID,
                        TERMNO1,
                        TERMNO2,
                        BRANCHID,
                        ORDERID,
                        QRYTIME,
                        QRCODETYPE,
                        TXCODE}, this.LunXunOperationCompleted, userState);
        }
        
        private void OnLunXunOperationCompleted(object arg) {
            if ((this.LunXunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LunXunCompleted(this, new LunXunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectUserInfoByIDno", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectUserInfoByIDno(string IDno) {
            object[] results = this.Invoke("SelectUserInfoByIDno", new object[] {
                        IDno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectUserInfoByIDnoAsync(string IDno) {
            this.SelectUserInfoByIDnoAsync(IDno, null);
        }
        
        /// <remarks/>
        public void SelectUserInfoByIDnoAsync(string IDno, object userState) {
            if ((this.SelectUserInfoByIDnoOperationCompleted == null)) {
                this.SelectUserInfoByIDnoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectUserInfoByIDnoOperationCompleted);
            }
            this.InvokeAsync("SelectUserInfoByIDno", new object[] {
                        IDno}, this.SelectUserInfoByIDnoOperationCompleted, userState);
        }
        
        private void OnSelectUserInfoByIDnoOperationCompleted(object arg) {
            if ((this.SelectUserInfoByIDnoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectUserInfoByIDnoCompleted(this, new SelectUserInfoByIDnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DDCX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DDCX(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, string TXCODE, string QRCODETYPE) {
            object[] results = this.Invoke("DDCX", new object[] {
                        MERFLAG,
                        MERCHANTID,
                        POSID,
                        TERMNO1,
                        TERMNO2,
                        BRANCHID,
                        ORDERID,
                        TXCODE,
                        QRCODETYPE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DDCXAsync(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, string TXCODE, string QRCODETYPE) {
            this.DDCXAsync(MERFLAG, MERCHANTID, POSID, TERMNO1, TERMNO2, BRANCHID, ORDERID, TXCODE, QRCODETYPE, null);
        }
        
        /// <remarks/>
        public void DDCXAsync(string MERFLAG, string MERCHANTID, string POSID, string TERMNO1, string TERMNO2, string BRANCHID, string ORDERID, string TXCODE, string QRCODETYPE, object userState) {
            if ((this.DDCXOperationCompleted == null)) {
                this.DDCXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDDCXOperationCompleted);
            }
            this.InvokeAsync("DDCX", new object[] {
                        MERFLAG,
                        MERCHANTID,
                        POSID,
                        TERMNO1,
                        TERMNO2,
                        BRANCHID,
                        ORDERID,
                        TXCODE,
                        QRCODETYPE}, this.DDCXOperationCompleted, userState);
        }
        
        private void OnDDCXOperationCompleted(object arg) {
            if ((this.DDCXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DDCXCompleted(this, new DDCXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FaceDest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FaceDest(string Idno) {
            object[] results = this.Invoke("FaceDest", new object[] {
                        Idno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FaceDestAsync(string Idno) {
            this.FaceDestAsync(Idno, null);
        }
        
        /// <remarks/>
        public void FaceDestAsync(string Idno, object userState) {
            if ((this.FaceDestOperationCompleted == null)) {
                this.FaceDestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFaceDestOperationCompleted);
            }
            this.InvokeAsync("FaceDest", new object[] {
                        Idno}, this.FaceDestOperationCompleted, userState);
        }
        
        private void OnFaceDestOperationCompleted(object arg) {
            if ((this.FaceDestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FaceDestCompleted(this, new FaceDestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Refund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Refund(string Order) {
            object[] results = this.Invoke("Refund", new object[] {
                        Order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefundAsync(string Order) {
            this.RefundAsync(Order, null);
        }
        
        /// <remarks/>
        public void RefundAsync(string Order, object userState) {
            if ((this.RefundOperationCompleted == null)) {
                this.RefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundOperationCompleted);
            }
            this.InvokeAsync("Refund", new object[] {
                        Order}, this.RefundOperationCompleted, userState);
        }
        
        private void OnRefundOperationCompleted(object arg) {
            if ((this.RefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundCompleted(this, new RefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVer() {
            object[] results = this.Invoke("GetVer", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVerAsync() {
            this.GetVerAsync(null);
        }
        
        /// <remarks/>
        public void GetVerAsync(object userState) {
            if ((this.GetVerOperationCompleted == null)) {
                this.GetVerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVerOperationCompleted);
            }
            this.InvokeAsync("GetVer", new object[0], this.GetVerOperationCompleted, userState);
        }
        
        private void OnGetVerOperationCompleted(object arg) {
            if ((this.GetVerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVerCompleted(this, new GetVerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAppData() {
            object[] results = this.Invoke("GetAppData", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppDataAsync() {
            this.GetAppDataAsync(null);
        }
        
        /// <remarks/>
        public void GetAppDataAsync(object userState) {
            if ((this.GetAppDataOperationCompleted == null)) {
                this.GetAppDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppDataOperationCompleted);
            }
            this.InvokeAsync("GetAppData", new object[0], this.GetAppDataOperationCompleted, userState);
        }
        
        private void OnGetAppDataOperationCompleted(object arg) {
            if ((this.GetAppDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppDataCompleted(this, new GetAppDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SoftwarePackage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SoftwarePackage(string App, string MAC, string T) {
            object[] results = this.Invoke("SoftwarePackage", new object[] {
                        App,
                        MAC,
                        T});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SoftwarePackageAsync(string App, string MAC, string T) {
            this.SoftwarePackageAsync(App, MAC, T, null);
        }
        
        /// <remarks/>
        public void SoftwarePackageAsync(string App, string MAC, string T, object userState) {
            if ((this.SoftwarePackageOperationCompleted == null)) {
                this.SoftwarePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSoftwarePackageOperationCompleted);
            }
            this.InvokeAsync("SoftwarePackage", new object[] {
                        App,
                        MAC,
                        T}, this.SoftwarePackageOperationCompleted, userState);
        }
        
        private void OnSoftwarePackageOperationCompleted(object arg) {
            if ((this.SoftwarePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SoftwarePackageCompleted(this, new SoftwarePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Vc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Vc() {
            object[] results = this.Invoke("Vc", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VcAsync() {
            this.VcAsync(null);
        }
        
        /// <remarks/>
        public void VcAsync(object userState) {
            if ((this.VcOperationCompleted == null)) {
                this.VcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVcOperationCompleted);
            }
            this.InvokeAsync("Vc", new object[0], this.VcOperationCompleted, userState);
        }
        
        private void OnVcOperationCompleted(object arg) {
            if ((this.VcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VcCompleted(this, new VcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEqTerInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEqTerInfo(string ENum) {
            object[] results = this.Invoke("GetEqTerInfo", new object[] {
                        ENum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEqTerInfoAsync(string ENum) {
            this.GetEqTerInfoAsync(ENum, null);
        }
        
        /// <remarks/>
        public void GetEqTerInfoAsync(string ENum, object userState) {
            if ((this.GetEqTerInfoOperationCompleted == null)) {
                this.GetEqTerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEqTerInfoOperationCompleted);
            }
            this.InvokeAsync("GetEqTerInfo", new object[] {
                        ENum}, this.GetEqTerInfoOperationCompleted, userState);
        }
        
        private void OnGetEqTerInfoOperationCompleted(object arg) {
            if ((this.GetEqTerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEqTerInfoCompleted(this, new GetEqTerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InserEqTer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InserEqTer(string HospCode, string ENum) {
            object[] results = this.Invoke("InserEqTer", new object[] {
                        HospCode,
                        ENum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InserEqTerAsync(string HospCode, string ENum) {
            this.InserEqTerAsync(HospCode, ENum, null);
        }
        
        /// <remarks/>
        public void InserEqTerAsync(string HospCode, string ENum, object userState) {
            if ((this.InserEqTerOperationCompleted == null)) {
                this.InserEqTerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInserEqTerOperationCompleted);
            }
            this.InvokeAsync("InserEqTer", new object[] {
                        HospCode,
                        ENum}, this.InserEqTerOperationCompleted, userState);
        }
        
        private void OnInserEqTerOperationCompleted(object arg) {
            if ((this.InserEqTerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InserEqTerCompleted(this, new InserEqTerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankNumInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBankNumInfo(string HospCode) {
            object[] results = this.Invoke("GetBankNumInfo", new object[] {
                        HospCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankNumInfoAsync(string HospCode) {
            this.GetBankNumInfoAsync(HospCode, null);
        }
        
        /// <remarks/>
        public void GetBankNumInfoAsync(string HospCode, object userState) {
            if ((this.GetBankNumInfoOperationCompleted == null)) {
                this.GetBankNumInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankNumInfoOperationCompleted);
            }
            this.InvokeAsync("GetBankNumInfo", new object[] {
                        HospCode}, this.GetBankNumInfoOperationCompleted, userState);
        }
        
        private void OnGetBankNumInfoOperationCompleted(object arg) {
            if ((this.GetBankNumInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankNumInfoCompleted(this, new GetBankNumInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void VerificationCodeCompletedEventHandler(object sender, VerificationCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificationCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificationCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OneDWanCompletedEventHandler(object sender, OneDWanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OneDWanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OneDWanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BaseOneDWanCompletedEventHandler(object sender, BaseOneDWanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BaseOneDWanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BaseOneDWanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DetectionCompletedEventHandler(object sender, DetectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void QuickResponseCompletedEventHandler(object sender, QuickResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuickResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuickResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddBillInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateBillCompletedEventHandler(object sender, UpdateBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Pay100CompletedEventHandler(object sender, Pay100CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Pay100CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Pay100CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Pay001CompletedEventHandler(object sender, Pay001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Pay001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Pay001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LunXunCompletedEventHandler(object sender, LunXunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LunXunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LunXunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectUserInfoByIDnoCompletedEventHandler(object sender, SelectUserInfoByIDnoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectUserInfoByIDnoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectUserInfoByIDnoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DDCXCompletedEventHandler(object sender, DDCXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DDCXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DDCXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FaceDestCompletedEventHandler(object sender, FaceDestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FaceDestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FaceDestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RefundCompletedEventHandler(object sender, RefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetVerCompletedEventHandler(object sender, GetVerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAppDataCompletedEventHandler(object sender, GetAppDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SoftwarePackageCompletedEventHandler(object sender, SoftwarePackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoftwarePackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SoftwarePackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void VcCompletedEventHandler(object sender, VcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEqTerInfoCompletedEventHandler(object sender, GetEqTerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEqTerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEqTerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InserEqTerCompletedEventHandler(object sender, InserEqTerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InserEqTerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InserEqTerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetBankNumInfoCompletedEventHandler(object sender, GetBankNumInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankNumInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankNumInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591